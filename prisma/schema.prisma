generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    username String
    email    String
    password String
    role     UserRole @default(USER)

    blog  Blog?
    posts Post[]

    provider   String?
    providerId String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([id, username])
}

model Blog {
    id Int @id @default(autoincrement())

    user     User   @relation(fields: [userId, username], references: [id, username])
    userId   Int
    username String

    title       String
    description String
    status      BlogStatus @default(PUBLIC)

    posts Post[]
    tags  Tag[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([userId, username])
}

model Post {
    id Int @id @default(autoincrement())

    blog   Blog @relation(fields: [blogId], references: [id])
    blogId Int

    user   User @relation(fields: [userId], references: [id])
    userId Int

    title String

    tag   Tag @relation(fields: [tagId], references: [id])
    tagId Int

    description String
    slug        String @unique
    text        String
    imageUrl    String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Tag {
    id    Int    @id @default(autoincrement())
    title String @unique
    color String

    blog   Blog @relation(fields: [blogId], references: [id])
    blogId Int

    posts Post[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum UserRole {
    ADMIN
    USER
}

enum BlogStatus {
    PUBLIC
    PRIVATE
}
